!SESSION 2024-03-09 13:58:53.284 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=11.0.15
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\HP\OneDrive\Desktop\OrangeHRM\.metadata\.bak_0.log
Created Time: 2024-03-09 14:40:20.070

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:20.070
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value 
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:20.072
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:20.073
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:22.231
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which 
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:22.232
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:22.232
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:23.048
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which 
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:23.049
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:23.049
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:27.246
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not 
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:27.247
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:27.247
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:28.085
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not 
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:28.086
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:28.086
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:32.105
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not ch
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:32.106
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:32.106
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:32.127
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not ch
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:32.129
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:32.129
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:32.163
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not ch
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:32.164
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:32.165
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:32.981
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not chang
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:32.983
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:32.984
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:33.621
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not changeg
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:33.622
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:33.623
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:35.658
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:35.659
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:35.660
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:35.679
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:35.680
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:35.680
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:39.180
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change'
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:39.181
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:39.181
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:39.200
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change'
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:39.201
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:39.202
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:41.203
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change')]
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:40:41.204
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:40:41.205
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:40:41.235
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change')]
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:40:41.237
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:40:41.238
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:17.267
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@atribute,'starting part of value which does not change')]
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:17.269
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:17.270
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:19.044
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:19.046
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:19.047
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:19.069
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:19.069
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:19.070
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:31.815
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:31.816
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:31.817
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:33.579
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:33.581
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:33.581
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:35.116
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:35.117
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:35.117
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:35.135
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:35.137
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:35.137
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:39.655
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:39.657
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:39.657
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:39.675
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:39.676
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:39.676
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:42.688
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:42.689
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:42.690
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:43.707
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:43.708
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:43.708
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:43.724
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:43.725
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:43.726
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:49.228
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:49.229
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:49.229
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:49.248
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:49.249
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:49.250
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:53.251
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:53.252
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:53.253
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:53.270
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:53.271
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:53.272
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:56.292
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:56.294
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:56.294
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:56.312
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:56.313
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:56.313
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:57.310
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:57.311
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:57.312
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:58.345
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:51:58.347
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:51:58.349
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:51:58.370
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:51:58.371
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:51:58.372
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:02.375
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:02.376
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:02.377
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:02.395
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:02.396
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:02.397
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:04.406
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:04.416
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:04.417
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:04.449
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:04.450
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:04.451
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:06.952
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:06.953
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:06.954
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:06.980
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:06.981
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:06.982
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:08.500
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:08.501
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:08.501
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:09.744
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:09.745
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:09.746
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:10.501
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:10.502
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:10.503
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:13.523
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:13.524
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:13.524
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:13.542
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:13.543
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:13.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:15.057
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:15.058
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:15.059
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:15.078
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:15.079
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:15.080
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:20.580
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attr
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:20.581
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:20.581
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:20.600
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attr
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:20.601
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:20.601
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:23.107
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribuy
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:23.109
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:23.110
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:23.139
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribu
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:23.142
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:23.143
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:23.708
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribu
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:23.710
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:23.710
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:24.754
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:24.755
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:24.756
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:25.626
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:25.627
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:25.628
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:30.150
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:30.152
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:30.152
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:30.168
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:30.169
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:30.170
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:37.678
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:37.679
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:37.679
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:44.723
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 14:52:44.725
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 14:52:44.725
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:44.745
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 14:52:44.746
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 14:52:44.747
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 14:52:54.750
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
