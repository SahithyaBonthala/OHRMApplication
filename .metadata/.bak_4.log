!SESSION 2024-03-09 13:58:53.284 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=11.0.15
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\Users\HP\OneDrive\Desktop\OrangeHRM\.metadata\.bak_3.log
Created Time: 2024-03-09 15:00:00.393

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:00.393
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:00.394
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:01.319
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts()
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:01.321
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:01.322
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:02.426
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:02.427
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:02.428
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:03.459
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:03.460
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:03.461
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:03.481
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:03.482
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:03.482
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:05.485
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().im
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:05.486
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:05.487
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:05.507
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().im
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:05.509
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:05.509
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:10.017
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(count, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:10.018
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:10.019
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:10.048
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(count, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:10.049
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:10.050
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:12.045
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:12.047
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:12.047
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:12.072
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:12.073
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:12.074
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:14.116
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:14.117
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:14.118
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:14.143
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:14.144
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:14.144
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:16.829
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:16.830
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:16.831
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:17.685
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, null)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:17.687
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:17.687
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:19.156
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, )
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:19.157
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:19.157
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:19.185
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, )
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:19.186
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:19.187
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:22.692
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, Time)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:22.693
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:22.695
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:22.719
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, Time)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:22.720
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:22.721
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:23.317
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, Timeu)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:23.318
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:23.318
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:24.602
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, Time)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:24.604
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:24.605
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:26.270
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:26.272
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:26.272
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:27.216
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:27.217
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:27.217
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:28.735
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:28.736
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:28.737
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:28.762
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:28.763
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:28.763
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:32.777
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:32.780
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:32.780
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:32.810
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:32.811
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:32.812
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:34.805
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS)
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:34.806
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:34.806
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:36.342
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:00:36.344
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:00:36.344
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:00:36.367
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:00:36.369
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:00:36.370
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:00.201
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:00.202
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:00.203
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:00.260
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:00.261
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:00.261
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:09.911
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:09.913
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:09.914
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:10.932
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:10.933
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:10.934
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:10.953
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:10.954
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:10.954
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:15.465
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:15.467
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:15.468
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:15.495
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:15.496
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:15.497
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:15.521
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:15.522
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:15.523
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:16.449
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:16.451
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:16.451
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:18.242
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:18.243
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:18.244
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:19.412
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:19.413
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:19.414
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:19.998
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:19.999
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:19.999
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:23.085
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                We
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:23.087
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:23.088
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:25.492
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriver
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:25.493
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:25.494
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:27.394
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:27.395
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:27.396
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:28.100
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:28.101
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:28.102
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:30.656
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait
               
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:30.657
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:30.658
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:32.302
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait
         
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:32.303
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:32.304
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:34.426
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:34.427
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:34.428
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:35.101
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:35.102
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:35.102
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:37.046
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:37.047
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:37.048
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:38.631
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:38.633
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:38.633
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:39.171
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:39.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:39.174
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:42.198
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:42.199
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:42.200
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:42.227
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:42.228
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:42.229
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:42.281
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new 
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:42.282
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:42.283
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:44.320
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new Web
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:44.321
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:44.322
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:44.873
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new WebDr
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:44.874
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:44.875
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:45.637
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new WebDrie
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2024-03-09 15:01:45.638
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2024-03-09 15:01:45.639
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:46.227
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new WebDrie
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:46.228
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:46.229
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:49.270
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new WebDriver
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2024-03-09 15:01:49.271
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2024-03-09 15:01:49.272
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2024-03-09 15:01:49.301
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.Syntax;


import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.server.handler.FindElement;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.Utility.Log;

public class Syntax {
	public static void main(String[] args) {
		
	

	//Automating  Browser
	WebDriver driver;
	System.setProperty("webdriver.chrome.driver", "./ChromeDriver.chromedriver.exe");
	//driver-Object (Always points to current browser)
	driver = new ChromeDriver();
	//Navigating to the Application HomePage
	driver.get(null);

	driver.navigate().to("URL");//will open the same browser of the same tab
	driver.close();//close method will close the browser when it is opened with single tab
	driver.quit();//quit method will close the browser when it is opened with single tab and also closes the browser with multiple tab's
	
	//Identifying the title of the current page
	String variableName=driver.getTitle();
	
	//validating title of the webpage
	if(variableName.equals(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//getting the Url of the current WebPage
	driver.getCurrentUrl();
	
	//Validating Url Address
	if(variableName.contains(variableName1))
	{
		Log.info(" Text Found ");
	}else
	{
		Log.info(" Text NOT Found ");
	}
	
	//Identifying the element of the webpage -using properties 
	
	driver.findElement(By.id("selector")).sendKeys(args);
	//id -  any locator
	WebElement variable = driver.findElement(By.id("Selector"));
	variable.sendKeys(args);
	
	By property = By.id("Selector");
	WebElement variablename = driver.findElement(property);
	variablename.sendKeys(" ");
	
	String testData = " TestData";
	By property1 = By.id("Selector");
	WebElement variablename1 = driver.findElement(property);
	variablename.sendKeys(testData);
	variablename.click();//click operation
	
	//getting the text of WebElement
	By property2 = By.id("Selector");
	WebElement variablename2 = driver.findElement(property);
	String text=variablename2.getText();
	
	//getting the attribute value
	String attributeValue=variablename2.getAttribute("AttributeName");
	
	//Whenever we work on a group of similar type of elements we look for a common property existing among them 
	List<WebElement> var = driver.findElements(By.id(" "));
	var.size();//to get the count of the elements
	
	//coming back to previous page
	driver.navigate().refresh();
	driver.navigate().back();
	
	//Excel operations
	//Read
	//Identifying the file in the system
	FileInputStream file = new FileInputStream(" path of the Excel file ");
	//Identifying workBook in the file
	XSSFWorkbook book = new XSSFWorkbook(file);
	//identifying the sheet in the Workbook
	XSSFSheet sheet = book.getSheet("SheetName");
	//identifying the row in the sheet
	Row row =sheet.getRow(0);
	//identifying rowofCell in the row
	Cell cell=row.getCell(0);
	//Get TestData from the rowOfCell 
	String TestData=cell.getStringCellValue();
	System.out.println(TestData);//prints the value from the Cell 
	
	//Read Multiple TestData
	//Identifying the file in the system
		FileInputStream file = new FileInputStream(" path of the Excel file ");
		//Identifying workBook in the file
		XSSFWorkbook book = new XSSFWorkbook(file);
		//identifying the sheet in the Workbook
		XSSFSheet sheet = book.getSheet("SheetName");
		//identifying no of active rows in the sheet
		int count=sheet.getLastRowNum();
		for(int i=0; i<count; i++) {
			Row newrow =sheet.getRow( i);
			int cellCount=newrow.getLastCellNum();
			for(int j=0; j<cellCount;j++) {
				Cell newcell=row.getCell(j);
				String value=newcell.getStringCellValue();
			}
		}
	
		//Write operations
		//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//Creating new row in the Sheet
				Row NewRow = sheet.createRow(0);
				//creating Newcell in the newRow
				Cell NewCell = NewRow.createCell(count);
				NewCell.setCellValue("");
		
		//Multiple
				//Identifying the file in the system
				FileInputStream file = new FileInputStream(" path of the Excel file ");
				//Identifying workBook in the file
				XSSFWorkbook book = new XSSFWorkbook(file);
				//identifying the sheet in the Workbook
				XSSFSheet sheet = book.getSheet("SheetName");
				//identifying no of active rows in the sheet
				int count=sheet.getLastRowNum();
				for(int i=0; i<count; i++) {
					Row newrow =sheet.createRow(i);
					int cellCount=newrow.getLastCellNum();
					for(int j=0; j<cellCount;j++) {
						Cell newcell=row.createCell(j);
						newcell.setCellValue("");
					}
				}	
				
				//SCREENSHOT
				File Variable =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
				FileUtils.copyFile(Variable, new File("./ApplicationScreenShots/Screenshot.png"));//destination file
				
				//MouseHoverOperation
				Actions mouseHover = new Actions(driver);
				mouseHover.moveToElement(variablename2).build().perform();
				//keyboard Actions
				mouseHover.sendKeys(Keys.ENTER).build().perform();
				
				//Maximizing the browser
				driver.manage().window().maximize();
				
				//Select operation
				Select select = new Select(driver.findElement(By.id("")));
				select.selectByVisibleText("");
				select.selectByIndex(0);
				select.selectByValue("");
				select.deselectByIndex(0);
				select.deselectByValue("");
				select.deselectByVisibleText("");
				select.deselectAll();//used to desect all the selected optional values
				
				
				//Switch into the frame of the webpage
				driver.switchTo().frame(webElement);
				driver.switchTo().defaultContent();//to get out of the frame
				
				//Drag and Drop operation
				Actions action = new Actions(driver);
				action.dragAndDrop(variablename1, variablename2).build().perform();//variablename1-src element variablename2-destinationElement
				
				//Handling Alerts
				Alert alert = driver.switchTo().alert();
				alert.accept();//accepting the ok button in the alert window
				alert.dismiss();//used to work with cancel button
				alert.sendKeys("");//sending testdata into the alert window
				
				//Exception handling
				try {
					
				}
				catch(Exception e) {// e- can be any variable
					
				}
				
				//Attatching photographs
				java.lang.Runtime.getRuntime().equals("path of autoIT Script");
				
				//identifying the properties file -since the properties of the Element are stored in it
				FileInputStream propertiesFile = new FileInputStream(" Path of the properties File ");
				Properties properties = new Properties();
				properties.load(propertiesFile);
				
				By elementProperty = By.id(properties.getProperty(" "));//property of an Element is identified and assigned to a variable
				
				//XPATH SYNTAX
				
				//tagName[@attribute='attributeValue']
				
				//XPATH SYNTAX - with more than one attribute
				
				1.//tagName[@attribute1='attributeValue1'][@attribute2='atttributeValue2']...
				2.//tagName[@attribute1='attributevalue1' and @attribute='attributeValue2' and @attribute3='atttributeValue3' and ......]
				
				//XPATH SYNTAX - using text()
				
				1.//tagName[text()='textvalue']
				
				//XPATH SYNTAX - using contains
				
				1.//tagName[contains(text(),'partialTextValue']
				2.//tagname[contains(@attribute,'partialvalue')]
				
				//Xpath expression creation based on properties of Element
				
				1) starts-with()
                    Syntax-
                    //*[starts-with(@attribute,'starting part of value which does not change')]
				
				2)ends-with()
                     Syntax-
                     //*[ends-with(@attribute,'ending part of the value which does not change')]
                     
                3)contains()
                     Syntax-
                     //*[contains(@attribute,'some part of value which does not change')]
                     
               //PageLoad
                     
                     driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
                
                //Implicit Wait
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
                
                //Explicit Wait
                WebDriverWait wait = new WebDriver
				
				
				
				
		
	
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
